/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Final_ST2;



import java.sql.*;
import java.text.*;
import java.util.*;
import javax.swing.*;

/**
 *
 * @author Yaseer
 */
public class CheckIn extends javax.swing.JFrame {
    String customer=null;
    commonFunctions validations = new commonFunctions();
    Connection conn = new DBConnection().connect();
    
    
    CheckIn() {
        initComponents();
        String query = "SELECT CUSTOMER_ID FROM reserve WHERE status = 'reserved'";
        validations.FillJboxList(CID,query);
        customer = validations.getJComboBoxValue(CID);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lMessage = new javax.swing.JLabel();
        CID = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        reservationNumber = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        checkOut = new com.toedter.calendar.JDateChooser();
        roomId = new javax.swing.JLabel();
        checkinDate = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        pricePerDay = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        roomType = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        view = new javax.swing.JButton();
        checkbtn1 = new javax.swing.JButton();
        Close = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Check Availability");

        jLabel6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel6.setText("Check In");
        jLabel6.setPreferredSize(new java.awt.Dimension(120, 30));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setText("Reservation Number");
        jLabel1.setPreferredSize(new java.awt.Dimension(120, 30));

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setText("Room ID");
        jLabel3.setPreferredSize(new java.awt.Dimension(120, 30));

        lMessage.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lMessage.setForeground(new java.awt.Color(255, 0, 51));
        lMessage.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lMessage.setPreferredSize(new java.awt.Dimension(200, 20));

        CID.setPreferredSize(new java.awt.Dimension(120, 30));
        CID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                CIDFocusLost(evt);
            }
        });
        CID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CIDActionPerformed(evt);
            }
        });
        CID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CIDKeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel5.setText("Customer ID");
        jLabel5.setPreferredSize(new java.awt.Dimension(120, 30));

        reservationNumber.setPreferredSize(new java.awt.Dimension(120, 30));
        reservationNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reservationNumberActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel7.setText("Check Out");
        jLabel7.setPreferredSize(new java.awt.Dimension(120, 30));

        checkOut.setPreferredSize(new java.awt.Dimension(120, 30));

        roomId.setText("NA");
        roomId.setPreferredSize(new java.awt.Dimension(120, 30));

        checkinDate.setText("NA");
        checkinDate.setPreferredSize(new java.awt.Dimension(120, 30));

        jLabel10.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel10.setText("Price Per Day");
        jLabel10.setPreferredSize(new java.awt.Dimension(120, 30));

        pricePerDay.setText("NA");
        pricePerDay.setPreferredSize(new java.awt.Dimension(120, 30));

        jLabel12.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel12.setText("Room Type");
        jLabel12.setPreferredSize(new java.awt.Dimension(120, 30));

        roomType.setText("NA");
        roomType.setPreferredSize(new java.awt.Dimension(120, 30));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(checkOut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkinDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pricePerDay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(roomId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(roomType, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 47, Short.MAX_VALUE)
                        .addComponent(lMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(reservationNumber, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CID, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(reservationNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(roomId, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(21, 21, 21)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(roomType, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkinDate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pricePerDay, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkOut, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Check In");

        view.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        view.setText("CheckIn");
        view.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewActionPerformed(evt);
            }
        });

        checkbtn1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        checkbtn1.setText("View details");
        checkbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkbtn1ActionPerformed(evt);
            }
        });

        Close.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Close.setText("Close");
        Close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(checkbtn1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(view, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Close, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(29, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(view, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkbtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Close, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void viewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewActionPerformed
           
            customer = validations.getJComboBoxValue(CID);
            String ResNumber = validations.getJComboBoxValue(reservationNumber);
            String checkin = checkinDate.getText();
            
           
        
        try{
              if(validations.isEmpty(customer)){
                     validations.EmptyForm();
              }
              else{
                  //get details from reserve table
                  String Rstatus="reserved";
                  String getReservationDetailsFormReserve = "SELECT * FROM reserve WHERE RESERVATION_NUMBER = '"+ResNumber+"'";
                  Statement stat = conn.createStatement();
                    ResultSet rs = stat.executeQuery(getReservationDetailsFormReserve);
                  if(rs.next()){
                        roomId.setText(rs.getString(6));
                        roomType.setText(rs.getString("ROOM_TYPE"));
                        checkinDate.setText(rs.getString("CHECKIN_DATE"));
                        pricePerDay.setText(rs.getString("TOTAL_BILL"));
                        
                  }
                     String rtype = roomType.getText();
                     String rid = roomId.getText();
                     String checkOutDateNew = validations.getdate(checkOut);
                     
                  //compare dates
                     
                  java.util.Date d1 = validations.getDatevalue(checkin);
                  java.util.Date d2 = validations.getDatevalue(checkOutDateNew);
                  
                  if(d2.after(d1)){
                      //update reservation table
                  
                     String CAHNGE_ROOM_STATUS = "update reserve set status = 'BOOKED',CHECKOUT_DATE = ?  where  CUSTOMER_ID =? and CHECKIN_DATE = ?  and ROOM_TYPE = ? and ROOM_ID = ?";
                     PreparedStatement CheckInToRoom = conn.prepareStatement(CAHNGE_ROOM_STATUS);
                     
                     CheckInToRoom.setString(1, checkOutDateNew);
                     CheckInToRoom.setString(2, customer);
                     CheckInToRoom.setString(3, checkin);
                     CheckInToRoom.setString(4, rtype);
                     CheckInToRoom.setString(5, rid);
                     
                     CheckInToRoom.executeUpdate();
                     
                     //update room table
                     
                     
                     
                     String query_change = "update room set status = 'BOOKED',checkoutDate = ?  where  checkinDate = ?  and roomTypeId = ? and roomId = ?";
                     PreparedStatement CAHNGE_ROOM_STATUS_in_rooms = conn.prepareStatement(query_change);
                     
                     CAHNGE_ROOM_STATUS_in_rooms.setString(1, checkOutDateNew);
                     CAHNGE_ROOM_STATUS_in_rooms.setString(2, checkin);
                     CAHNGE_ROOM_STATUS_in_rooms.setString(3, rtype);
                     CAHNGE_ROOM_STATUS_in_rooms.setString(4, rid);
                    
                     
                     CAHNGE_ROOM_STATUS_in_rooms.executeUpdate();
                     JOptionPane.showMessageDialog(this, "check IN Succesfull");
                  }
                  else{
                      JOptionPane.showMessageDialog(null,"checkout has to after checkin");
                  }
                  
                     
             }
                
      }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e.getMessage());
            }
                
    }//GEN-LAST:event_viewActionPerformed

    private void CIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CIDActionPerformed
     
    }//GEN-LAST:event_CIDActionPerformed

    private void reservationNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reservationNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reservationNumberActionPerformed

    private void checkbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkbtn1ActionPerformed
        customer = validations.getJComboBoxValue(CID);
        String ResNumber = validations.getJComboBoxValue(reservationNumber);
        
        try{
              if(validations.isEmpty(customer)){
                     validations.EmptyForm();
              }
              else{
                  //get details from reserve table
                  String getReservationDetailsFormReserve = "SELECT * FROM reserve WHERE RESERVATION_NUMBER = '"+ResNumber+"'";
                  Statement stat = conn.createStatement();
                    ResultSet rs = stat.executeQuery(getReservationDetailsFormReserve);
                  if(rs.next()){
                        roomId.setText(rs.getString(6));
                        roomType.setText(rs.getString("ROOM_TYPE"));
                        checkinDate.setText(rs.getString("CHECKIN_DATE"));
                        pricePerDay.setText(rs.getString("TOTAL_BILL"));
                        
                  }
              }
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_checkbtn1ActionPerformed

    private void CIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CIDKeyPressed
           
    }//GEN-LAST:event_CIDKeyPressed

    private void CIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CIDFocusLost
           reservationNumber.removeAllItems();
           String GETRESERVATION = "SELECT RESERVATION_NUMBER FROM reserve WHERE CUSTOMER_ID = '"+validations.getJComboBoxValue(CID)+"'AND status = 'reserved'";
           validations.FillJboxList(reservationNumber,GETRESERVATION);
    }//GEN-LAST:event_CIDFocusLost

    private void CloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseActionPerformed
        dispose();
    }//GEN-LAST:event_CloseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CheckIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CheckIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CheckIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CheckIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               //new Add_reservation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox CID;
    private javax.swing.JButton Close;
    private com.toedter.calendar.JDateChooser checkOut;
    private javax.swing.JButton checkbtn1;
    private javax.swing.JLabel checkinDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lMessage;
    private javax.swing.JLabel pricePerDay;
    private javax.swing.JComboBox reservationNumber;
    private javax.swing.JLabel roomId;
    private javax.swing.JLabel roomType;
    private javax.swing.JButton view;
    // End of variables declaration//GEN-END:variables
}
