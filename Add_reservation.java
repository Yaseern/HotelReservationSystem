/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Final_ST2;

import java.sql.*;

import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.*;
import java.util.Locale;
import javax.swing.JOptionPane;

/**
 *
 * @author Yaseer
 */
public class Add_reservation extends javax.swing.JFrame {
    
     commonFunctions validations = new commonFunctions();
    Connection conn = new DBConnection().connect();
    
    
    Add_reservation() {
        initComponents();
        String sql = "SELECT customerId FROM Customer";
        validations.FillJboxList(customers,sql);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        checkbtn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        roomTypeBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        CheckIn = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        roomId = new javax.swing.JComboBox();
        roomTypeId = new javax.swing.JTextField();
        lMessage = new javax.swing.JLabel();
        customers = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        Resetbtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        Close = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Check Availability");

        checkbtn.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        checkbtn.setText("RESERVE");
        checkbtn.setPreferredSize(new java.awt.Dimension(80, 30));
        checkbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkbtnActionPerformed(evt);
            }
        });

        roomTypeBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Luxury", "Pent", "Suit", "Lanai", "Standard", "Standard_Non_A/C", "Trible_A/C", "Trible_Non_A/C", "Double_A/C", "Double_Non_A/C", "Single_A/C", "Single_Non_A/C", " ", " " }));
        roomTypeBox.setPreferredSize(new java.awt.Dimension(120, 30));
        roomTypeBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomTypeBoxActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("Room Type ID");
        jLabel2.setPreferredSize(new java.awt.Dimension(120, 30));

        CheckIn.setPreferredSize(new java.awt.Dimension(120, 30));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel6.setText("Check In");
        jLabel6.setPreferredSize(new java.awt.Dimension(120, 30));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setText("Room Type");
        jLabel1.setPreferredSize(new java.awt.Dimension(120, 30));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setText("Room ID");
        jLabel3.setPreferredSize(new java.awt.Dimension(120, 30));

        roomId.setPreferredSize(new java.awt.Dimension(120, 30));
        roomId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomIdActionPerformed(evt);
            }
        });

        roomTypeId.setPreferredSize(new java.awt.Dimension(120, 30));
        roomTypeId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomTypeIdActionPerformed(evt);
            }
        });

        lMessage.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lMessage.setForeground(new java.awt.Color(255, 0, 51));
        lMessage.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lMessage.setPreferredSize(new java.awt.Dimension(200, 20));

        customers.setPreferredSize(new java.awt.Dimension(120, 30));
        customers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customersActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel5.setText("Customer ID");
        jLabel5.setPreferredSize(new java.awt.Dimension(120, 30));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 60, Short.MAX_VALUE)
                        .addComponent(lMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(CheckIn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(roomTypeId, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(roomTypeBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(roomId, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customers, 0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customers, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roomTypeBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roomTypeId, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addComponent(lMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roomId, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CheckIn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Resetbtn.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        Resetbtn.setText("RESET");
        Resetbtn.setPreferredSize(new java.awt.Dimension(80, 30));
        Resetbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetbtnActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("ADD RESRVATION");

        Close.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        Close.setText("CLOSE");
        Close.setPreferredSize(new java.awt.Dimension(80, 30));
        Close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Resetbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(Close, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 35, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(34, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Resetbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Close, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void roomTypeIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomTypeIdActionPerformed
        
            lMessage.setText("");
        
            try{
                
                String query = "SELECT r.roomId FROM Room r WHERE r.roomTypeId = '"+roomTypeId.getText()+"' and status = 'free'";
                validations.FillJboxList(roomId,query);
               }
            
            catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage());
            }
    }//GEN-LAST:event_roomTypeIdActionPerformed

    private void roomTypeBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomTypeBoxActionPerformed
          try{
            
            Statement stmt = conn.createStatement();
                      
            String query = "SELECT id FROM RoomType WHERE rTypeName = '"+roomTypeBox.getSelectedItem()+"'";
            
            ResultSet rs = stmt.executeQuery(query);
            
           while(rs.next()){
         
               String type = rs.getString(1);
               roomTypeId.setText(type);
           }
           
          
            lMessage.setText("Click the Room Type ID Field and Press Enter");
            
              }
        catch(Exception e){
        JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_roomTypeBoxActionPerformed

    private void ResetbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetbtnActionPerformed
        
        roomTypeBox.setSelectedItem(null);
        roomTypeId.setText(null);
        roomId.removeAllItems();
        CheckIn.setCalendar(null);
        //CheckOut.setCalendar(null);
        lMessage.setText("");
       
    }//GEN-LAST:event_ResetbtnActionPerformed

    private void checkbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkbtnActionPerformed
                  
              String RT = validations.getJComboBoxValue(roomTypeBox);
              String TID = roomTypeId.getText();
              String RID = validations.getJComboBoxValue(roomId);
              String CID = validations.getJComboBoxValue(customers);
              //variables for datebase dumping
              String status  = null;
              //String checkOut = null;
              String ROOM_ID = null;
              double price =0;
              java.util.Date today   = new java.util.Date();
              SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
              //System.out.println(df.format(today));
             
             
            if(TID.equals("") || RT.equals("N/A") || RID.equals("N/A")){
            validations.EmptyForm();
        }
            else{
                
                try{
                    //Statement stmt = conn.createStatement();
                    //String selectRooms = "SELECT * FROM Reservation";
                    //ResultSet rs = stmt.executeQuery(selectRooms);
                    String CheckInDate = validations.getdate(CheckIn);
                    java.util.Date checkINDate = validations.getDatevalue(CheckInDate);
                    if(checkINDate.after(today)){
                        try{
                            String getprice ="select PricePerDay from roomtype where id = '"+TID+"'";
                            Statement stmt = conn.createStatement();
                            ResultSet rs = stmt.executeQuery(getprice);

                            while(rs.next()){

                                price = rs.getDouble("PricePerDay");
                            }
                        }
                        catch(Exception ex){
                            JOptionPane.showMessageDialog(null,ex.getMessage());
                        }
                    //update room table
                         String CheckInQuery = "update room set checkinDate =? ,status = ? where roomId = ?";
                         PreparedStatement CheckInToRoom = conn.prepareStatement(CheckInQuery);

                         CheckInToRoom.setString(1, CheckInDate);
                         CheckInToRoom.setString(2, "reserved");
                         CheckInToRoom.setString(3, RID);

                         CheckInToRoom.executeUpdate();

                         //update reserve table
                         //String insertreservationquety = "update reserve set CUSTOMER_ID =? ,CHECKIN_DATE = ?,CHECKOUT_DATE = ? ,ROOM_TYPE = ?,ROOM_ID = ?,TOTAL_BILL =? where CUSTOMER_ID =? ,CHECKIN_DATE = ?,CHECKOUT_DATE = ? ,ROOM_TYPE = ?,ROOM_ID = ?";
                         //(CUSTOMER_ID,CHECKIN_DATE,ROOM_TYPE,ROOM_ID,TOTAL_BILL) 
                         String insertreservationquety = "insert into reserve (CUSTOMER_ID,CHECKIN_DATE,CHECKOUT_DATE,ROOM_TYPE,ROOM_ID,TOTAL_BILL,PRICE_PER_DAY,status) values(?,?,?,?,?,?,?,?)";
                         PreparedStatement addDataintoReservationTable = conn.prepareStatement(insertreservationquety);

                         addDataintoReservationTable.setString(1, CID);
                         addDataintoReservationTable.setString(2, CheckInDate);
                         addDataintoReservationTable.setString(3, CheckInDate);
                         addDataintoReservationTable.setString(4, TID);
                         addDataintoReservationTable.setString(5, RID);
                         addDataintoReservationTable.setDouble(6, price);
                         addDataintoReservationTable.setDouble(7, price);
                         addDataintoReservationTable.setString(8, "reserved");

                         addDataintoReservationTable.executeUpdate();

                         JOptionPane.showMessageDialog(null, "data Insertion Successfull");
                         roomTypeBox.setSelectedItem(null);
                         roomTypeId.setText(null);
                         roomId.removeAllItems();
                         CheckIn.setCalendar(null);
                         //CheckOut.setCalendar(null);
                         lMessage.setText("");
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Reserve in advance");
                    }
                }
                catch(Exception ex){
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                 }
            }
               
            
                
    }//GEN-LAST:event_checkbtnActionPerformed

    private void roomIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomIdActionPerformed
         
        
    }//GEN-LAST:event_roomIdActionPerformed

    private void customersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customersActionPerformed
       
    }//GEN-LAST:event_customersActionPerformed

    private void CloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseActionPerformed
       dispose();
    }//GEN-LAST:event_CloseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Add_reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Add_reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Add_reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Add_reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               //new Add_reservation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser CheckIn;
    private javax.swing.JButton Close;
    private javax.swing.JButton Resetbtn;
    private javax.swing.JButton checkbtn;
    private javax.swing.JComboBox customers;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lMessage;
    private javax.swing.JComboBox roomId;
    private javax.swing.JComboBox roomTypeBox;
    private javax.swing.JTextField roomTypeId;
    // End of variables declaration//GEN-END:variables
}
